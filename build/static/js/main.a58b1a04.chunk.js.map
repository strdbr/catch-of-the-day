{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","classNames","timeout","enter","exit","component","name","price","onClick","deleteOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeID","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.a58b1a04.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\r\nimport { getFunName } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StorePicker extends React.Component{\r\n    myInput = React.createRef();\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    goToStore = event =>{\r\n        // Detener el submit y no refrescar la pagina\r\n        event.preventDefault();\r\n        // Agarrar el texto del form\r\n        const storeName = this.myInput.current.value;\r\n        // Cambiar el URL a lo que esta en el form\r\n        this.props.history.push(`/store/${storeName}`);\r\n    }\r\n    render(){\r\n        return (\r\n            <> {/* Te permite fragmentar sin emparentar el HTM*/}\r\n                <form className='store-selector' onSubmit={this.goToStore}>\r\n                    <h2>Please enter a store</h2>\r\n                    <input \r\n                        type='text' \r\n                        ref={this.myInput}\r\n                        required \r\n                        placeholder='Store Name'  \r\n                        defaultValue={getFunName()} \r\n                    />\r\n                    <button type='submit'>Visit store</button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) =>(\r\n    <header className='top'>\r\n            <h1>Catch \r\n                <span className='ofThe'>\r\n                    <span className='of'>of</span>\r\n                    <span className='the'>the</span>\r\n                </span> \r\n                Day\r\n            </h1>\r\n        <h3 className='tagline'>\r\n            <span>{props.tagline}</span>               \r\n        </h3>\r\n    </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {formatPrice} from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Order extends React.Component{\r\n    static propTypes = {\r\n        fishes: PropTypes.object,\r\n        order: PropTypes.object,\r\n        deleteOrder: PropTypes.func\r\n    }\r\n\r\n    renderOrder = key => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        if(!fish) return null;\r\n        if(!isAvailable) {\r\n            return (\r\n            <CSSTransition classNames='order' key={key} timeout={{enter:500, exit:500}}>\r\n            <li key={key}>Sorry {fish ? fish.name : \"fish\"} is no longer available\r\n            </li>\r\n            </CSSTransition>\r\n            );\r\n        }\r\n        return (\r\n        <CSSTransition classNames='order' key={key} timeout={{enter:500, exit:500}}>\r\n        <li key={key}>\r\n            <span>\r\n            <TransitionGroup component='span' className='count'>\r\n                <CSSTransition classNames='count' key={count} timeout={{ enter: 500, exit: 500 }}>\r\n                    <span>{count}</span>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n            </span>\r\n            <span>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.deleteOrder(key)}>&times;</button>\r\n            </span>\r\n        </li>\r\n        </CSSTransition>\r\n        )};\r\n    render(){\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable){\r\n                return prevTotal + (count * fish.price);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n        return(\r\n            <div className='order-wrap'>\r\n                <h2>Order</h2>\r\n                <TransitionGroup component='ul' className='order'>\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>\r\n                <div className='total'>\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Order;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component{\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFish: PropTypes.func\r\n    }\r\n\r\n    createFish = (event) =>{\r\n        //Prevenir que el form se envie\r\n        event.preventDefault();\r\n        const fish = {\r\n            name : this.nameRef.current.value,\r\n            price : parseFloat(this.priceRef.current.value),\r\n            status : this.statusRef.current.value,\r\n            desc : this.descRef.current.value,\r\n            image : this.imageRef.current.value,\r\n        }\r\n        this.props.addFish(fish);\r\n        //Limpiar el form\r\n        event.currentTarget.reset();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='inventory'>\r\n                <form className='fish-edit' onSubmit={this.createFish}>\r\n                   <input name='name' ref={this.nameRef} type='text' placeholder='Name'/>\r\n                   <input name='price' ref={this.priceRef}type='text' placeholder='Price'/>\r\n                   <select name='status' ref={this.statusRef}>\r\n                        <option value='available'>Fresh!</option>\r\n                        <option value='available'>Sold Out</option>\r\n                   </select>\r\n\r\n                   <textarea name='desc' ref={this.descRef} placeholder='Desc'/>\r\n                   <input name='image' ref={this.imageRef} type='text' placeholder='Image'/>\r\n                   <button type='submit'>+ Add Fish</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n    static propTypes={\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        index: PropTypes.string,\r\n        updateFish: PropTypes.func\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const updatedFish = {...this.props.fish, [event.currentTarget.name]: event.currentTarget.value};\r\n        this.props.updateFish(this.props.index,updatedFish);\r\n    };\r\n    render(){\r\n        return <div className='fish-edit'>\r\n            <input type='text' name='name' onChange={this.handleChange} value={this.props.fish.name} />\r\n            <input type='text' name='price' onChange={this.handleChange} value={this.props.fish.price} />\r\n            <select type='text' name='status' onChange={this.handleChange} value={this.props.fish.status}>\r\n                <option value='available'>Fresh!</option>\r\n                <option value='unavailable'>Sold Out!</option>\r\n            </select>\r\n            <textarea name='desc' onChange={this.handleChange} value={this.props.fish.desc} />            \r\n            <input type='text' name='image' onChange={this.handleChange} value={this.props.fish.image} />\r\n            <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>            \r\n        </div>\r\n    }\r\n}\r\n\r\nexport default EditFishForm;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) =>(\r\n    <nav className='login'>\r\n        <p>Sign in to manage your store's inventory.</p>\r\n        <button className='github' onClick={() => props.authenticate('Github')}>Log in with Github</button>\r\n        <button className='facebook' onClick={() => props.authenticate('Facebook')}>Log in with Facebook</button>\r\n    </nav>\r\n)\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login;","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyC8nm1zu6tmkte0RQl3Myiu46dm_1cugV4\",\r\n    authDomain: \"catch-of-the-day-strdbr.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-strdbr-default-rtdb.firebaseio.com\",\r\n    projectId: \"catch-of-the-day-strdbr\",\r\n    storageBucket: \"catch-of-the-day-strdbr.appspot.com\",\r\n    messagingSenderId: \"226371990421\",\r\n    appId: \"1:226371990421:web:9dd7f4cc525f30f447bc9c\",\r\n    measurementId: \"G-WHQ6Z07E1M\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base;","import React from \"react\";\r\n//import fishes from \"../sample-fishes\";\r\nimport AddFishForm from \"./AddFishForm\";\r\nimport EditFishForm from \"./EditFishForm\";\r\nimport PropTypes from 'prop-types';\r\nimport Login from \"./Login\";\r\nimport firebase from \"firebase\";\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends React.Component{\r\n    static propTypes ={\r\n        fishes: PropTypes.object,\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        loadSampleFishes: PropTypes.func\r\n    };\r\n\r\n    state = {\r\n       uid: null,\r\n       owner: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if(user){\r\n                this.authHandler({ user });\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async (authData) => {\r\n        const store = await base.fetch(this.props.storeID, { context: this });\r\n        if(!store.owner){\r\n            await base.post(`${this.props.storeID}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n        }\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: store.owner || authData.user.uid\r\n        })\r\n    };\r\n\r\n    authenticate = (provider) =>{\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    };\r\n\r\n    logout = async () => {\r\n        await firebase.auth().signOut();\r\n        this.setState({uid: null});\r\n    }\r\n\r\n    render(){\r\n        const logout = <button onClick={this.logout}>Log out!</button>\r\n\r\n        if(!this.state.uid){\r\n            return <Login authenticate={this.authenticate} />\r\n        }\r\n        if(this.state.uid !== this.state.owner){\r\n            return(\r\n                <div>\r\n                    <p>Sorry you're not the owner!</p>\r\n                    {logout}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className='inventory'>\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish} />)}\r\n                <AddFishForm addFish = {this.props.addFish} />\r\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\r\nimport {formatPrice} from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Fish extends React.Component{\r\n    static propTypes ={\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string,\r\n            price: PropTypes.number\r\n        }),\r\n        addToOrder: PropTypes.func\r\n    }\r\n    render(){\r\n        const {image, name, price, desc, status} = this.props.details;\r\n        const isAvailable = status === 'available';\r\n        return(\r\n            <li className='menu-fish'>\r\n                <img src={image} alt={name} />\r\n                <h3 className='fish-name'>\r\n                    {name}\r\n                    <span className='price'>{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\r\n                    {isAvailable ? 'Add To Order' : 'Sold Out!'}\r\n                </button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fish;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Header from \"./Header\";\r\nimport Order from \"./Order\";\r\nimport Inventory from \"./Inventory\";\r\nimport sampleFishes from \"../sample-fishes\";\r\nimport Fish from \"./Fish\";\r\nimport base from \"../base\";\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { params } = this.props.match;\r\n        const localStorageRef = localStorage.getItem(params.storeID);\r\n        if(localStorageRef){\r\n            this.setState({order: JSON.parse(localStorageRef)});\r\n        }\r\n        this.ref = base.syncState(`${params.storeID}/fishes`, {\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem(this.props.match.params.storeID, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    addFish = fish =>{\r\n        //Editar el state\r\n        //1. Conseguir una copia del state existente\r\n        const fishes = {...this.state.fishes};\r\n        //2. Añadir el pescado\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        //3. Añadir el pescado al state\r\n        this.setState({\r\n           fishes: fishes\r\n        });\r\n    };\r\n\r\n    updateFish = (key, updatedFish) =>{\r\n        const fishes = {...this.state.fishes};\r\n        fishes[key] = updatedFish;\r\n        this.setState({fishes});\r\n    };\r\n\r\n    deleteFish = (key) => {\r\n        const fishes = {...this.state.fishes};\r\n        fishes[key] = null;\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSampleFishes = () => {\r\n        this.setState({fishes: sampleFishes});\r\n    };\r\n\r\n    addToOrder = (key) => {\r\n        //1.Tomar una copia del state\r\n        const order = {...this.state.order};\r\n        //2.Añadir o actualizar la orden\r\n        order[key] = order[key] + 1 || 1;\r\n        //3. Llamar el setState para actualizar el state\r\n        this.setState({ order });\r\n    }\r\n\r\n    deleteOrder = (key) =>{\r\n        const order = {...this.state.order};\r\n        delete order[key];\r\n        this.setState({ order });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='catch-of-the-day'>\r\n                <div className='menu'>\r\n                    <Header tagline='Fresh Seafood Market' />\r\n                    <ul className='fishes'>\r\n                        {Object.keys(this.state.fishes).map(key => (\r\n                            <Fish \r\n                                key={key}\r\n                                index={key}\r\n                                details={this.state.fishes[key]}\r\n                                addToOrder={this.addToOrder}\r\n                            />\r\n                            ))}\r\n                    </ul>\r\n                </div>\r\n                <Order fishes={this.state.fishes} order={this.state.order} deleteOrder={this.deleteOrder} />\r\n                <Inventory \r\n                    addFish={this.addFish}\r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}  \r\n                    loadSampleFishes={this.loadSampleFishes}\r\n                    fishes={this.state.fishes}\r\n                    storeID={this.props.match.params.storeID}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n    <div>\r\n        <h2>Not found!!!!</h2>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path='/' component={StorePicker} />\r\n            <Route path='/store/:storeID' component={App} />\r\n            <Route component={NotFound} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Router;","import React from \"react\";\r\nimport { render } from 'react-dom';\r\n//import StorePicker from './components/StorePicker';\r\n//import App from './components/App';\r\nimport Router from \"./components/Router\";\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}